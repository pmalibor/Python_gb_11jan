# Задание 5 урок 2
# 5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает.
# У пользователя нужно запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением должен
# разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2]

try:

    my_list = [3, 7, 9, 45]                        # Задаем набор натуральных чисел
    print(f'Набор натуральных чисел', end=': ''')  # принтуем без перевода каретки
    for el in my_list: print(el, end=',')          # выводим данные списка без [  ]
    print('.')                                     # перевод каретки
    while True:                                    # бесконечный цикл ввода натурального числа пользователем
        print('')
        a = int(input('Введите натуральное число : '))     # ввод числа пользователем в тип целое
        if a <= 0:                                         # если число отрицательное
            print('Встретилось отрицательное число :', a, '. Работа закончена !')  # завершение работы с сообщением
            break
        my_list.append(a)                                   # добавляем в конец списка введенное число
        my_list.sort()                                      # сортировка элементов списка
        my_list.reverse()                                  # реверс для рейтинга нужен
        print(f'Пользователь ввел число :', a, end='.')              # принтуем введенное число
        print(f' Результат', end=': ''')
        for el in my_list: print(el, end=',')               # принтуем в цикле элементы отсортированного списка

except Exception:
    print('Ошибочный ввод данных !')
